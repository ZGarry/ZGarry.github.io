import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as r,f as c}from"./app-288fd67c.js";const o="/assets/7b4bd39b-eb0c-40c0-b4ad-14e33930a0d7-f06d27fa.jpg",t={},l=c('<h1 id="在cursor里用claude已经比购买claude还要好" tabindex="-1"><a class="header-anchor" href="#在cursor里用claude已经比购买claude还要好" aria-hidden="true">#</a> 在Cursor里用claude已经比购买claude还要好</h1><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如题。<br> 专业版的Cl·中aude的核心是有Project能力（收费）。但还是有如下的问题无法解决：</p><ol><li>没法很快提供一个Context给Claude。例如想特指某一部分文件，还是要复制。但Cursor里面提供了@表达符帮助你快速提供Context。</li><li>Claude可以录入Project，但随后对代码的调整却不会更新Project。你需要手动复制粘贴。如果Claude只改动了一部分，你还需要定位到究竟是改了什么地方，然后复制粘贴。<br> 更别说，用Cursor时，你可以手动编码，写文档，运行等等等。<br> 总而言之，后续不再建议直接用Claude，都建议在Cursor里用Claude。#7</li></ol>',4),d=[l];function u(s,_){return a(),r("div",null,d)}const f=e(t,[["render",u],["__file","在Cursor里用claude已经比购买claude还要好.html.vue"]]);export{f as default};
